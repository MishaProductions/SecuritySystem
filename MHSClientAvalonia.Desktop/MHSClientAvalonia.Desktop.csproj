<Project Sdk="Microsoft.NET.Sdk">
	<!--Note: Dotnet currently does not allow to build on non-windows platforms when a windows TFM is specified-->
	<PropertyGroup Condition=" '$(OS)' != 'Windows_NT' ">
		<TargetFramework>net9.0</TargetFramework>
	</PropertyGroup>
	<PropertyGroup Condition=" '$(OS)' == 'Windows_NT' ">
		<TargetFrameworks>net9.0-windows10.0.17763.0;net9.0</TargetFrameworks>
	</PropertyGroup>
	
	<PropertyGroup>
		<OutputType>WinExe</OutputType>
		<!--If you are willing to use Windows/MacOS native APIs you will need to create 3 projects.
    One for Windows with net8.0-windows TFM, one for MacOS with net8.0-macos and one with net8.0 TFM for Linux.-->
		<TargetFramework>net9.0</TargetFramework>
		<Nullable>enable</Nullable>
		<BuiltInComInteropSupport>true</BuiltInComInteropSupport>
		<IncludeNativeLibrariesForSelfExtract>True</IncludeNativeLibrariesForSelfExtract>
		<PublishTrimmed>false</PublishTrimmed> <!--TODO: Fix-->
		<PublishSingleFile>true</PublishSingleFile>
		<SelfContained>false</SelfContained>
	</PropertyGroup>

	<PropertyGroup>
		<ApplicationManifest>app.manifest</ApplicationManifest>
		<ApplicationIcon>mhs-nor.ico</ApplicationIcon>
	</PropertyGroup>

	<ItemGroup>
	  <Content Include="mhs-nor.ico" />
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="Avalonia.Desktop" Version="11.2.3" />
		<!--Condition below is needed to remove Avalonia.Diagnostics package from build output in Release configuration.-->
		<PackageReference Condition="'$(Configuration)' == 'Debug'" Include="Avalonia.Diagnostics" Version="11.2.3" />
		<PackageReference Include="System.Drawing.Common" Version="9.0.0" />
	</ItemGroup>

	<ItemGroup>
		<ProjectReference Include="..\MHSClientAvalonia\MHSClientAvalonia.csproj" />
	</ItemGroup>
</Project>
